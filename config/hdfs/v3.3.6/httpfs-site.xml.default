<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- Do not modify this file directly.  Instead, copy entries that you -->
<!-- wish to modify from this file into hdfs-site.xml and change them -->
<!-- there.  If hdfs-site.xml does not already exist, create it.      -->

<configuration>

  <property>
    <name>httpfs.http.port</name>
    <value>14000</value>
    <description>The HTTP port for HttpFS REST API.</description>
  </property>

  <property>
    <name>httpfs.http.hostname</name>
    <value>0.0.0.0</value>
    <description>The bind host for HttpFS REST API.</description>
  </property>

  <property>
    <name>httpfs.http.administrators</name>
    <value></value>
    <description>ACL for the admins, this configuration is used to control who can access the default servlets for
      HttpFS server. The value should be a comma separated list of users and groups. The user list comes first and is
      separated by a space followed by the group list, e.g. "user1,user2 group1,group2". Both users and groups are
      optional, so "user1", " group1", "", "user1 group1", "user1,user2 group1,group2" are all valid (note the leading
      space in " group1"). '*' grants access to all users and groups, e.g. '*', '* ' and ' *' are all valid.
    </description>
  </property>

  <property>
    <name>httpfs.ssl.enabled</name>
    <value>false</value>
    <description>Whether SSL is enabled. Default is false, i.e. disabled.</description>
  </property>

  <property>
    <name>hadoop.http.idle_timeout.ms</name>
    <value>60000</value>
    <description>Httpfs Server connection timeout in milliseconds.</description>
  </property>

  <property>
    <name>hadoop.http.max.threads</name>
    <value>1000</value>
    <description>The maxmimum number of threads.</description>
  </property>

  <property>
    <name>hadoop.http.max.request.header.size</name>
    <value>65536</value>
    <description>The maxmimum HTTP request header size.</description>
  </property>

  <property>
    <name>hadoop.http.max.response.header.size</name>
    <value>65536</value>
    <description>The maxmimum HTTP response header size.</description>
  </property>

  <property>
    <name>hadoop.http.temp.dir</name>
    <value>${hadoop.tmp.dir}/httpfs</value>
    <description>HttpFS temp directory.</description>
  </property>

  <property>
    <name>httpfs.buffer.size</name>
    <value>4096</value>
    <description>The buffer size used by a read/write request when streaming data from/to HDFS.</description>
  </property>

  <property>
    <name>httpfs.services</name>
    <value>org.apache.hadoop.lib.service.instrumentation.InstrumentationService,
      org.apache.hadoop.lib.service.scheduler.SchedulerService,
      org.apache.hadoop.lib.service.security.GroupsService,
      org.apache.hadoop.lib.service.hadoop.FileSystemAccessService
    </value>
    <description>Services used by the httpfs server.</description>
  </property>

  <property>
    <name>kerberos.realm</name>
    <value>LOCALHOST</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hostname</name>
    <value>${httpfs.http.hostname}</value>
    <description></description>
  </property>

  <property>
    <name>hadoop.http.authentication.signature.secret.file</name>
    <value>${httpfs.config.dir}/httpfs-signature.secret</value>
    <description></description>
  </property>

  <property>
    <name>hadoop.http.authentication.type</name>
    <value>simple</value>
    <description></description>
  </property>

  <property>
    <name>hadoop.http.authentication.kerberos.principal</name>
    <value>HTTP/${httpfs.hostname}@${kerberos.realm}</value>
    <description></description>
  </property>

  <property>
    <name>hadoop.http.authentication.kerberos.keytab</name>
    <value>${user.home}/httpfs.keytab</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.delegation.token.manager.update.interval</name>
    <value>86400</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.delegation.token.manager.max.lifetime</name>
    <value>604800</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.delegation.token.manager.renewal.interval</name>
    <value>86400</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hadoop.authentication.type</name>
    <value>simple</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hadoop.authentication.kerberos.keytab</name>
    <value>${user.home}/httpfs.keytab</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hadoop.authentication.kerberos.principal</name>
    <value>${user.name}/${httpfs.hostname}@${kerberos.realm}</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hadoop.filesystem.cache.purge.frequency</name>
    <value>60</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.hadoop.filesystem.cache.purge.timeout</name>
    <value>60</value>
    <description></description>
  </property>

  <property>
    <name>httpfs.access.mode</name>
    <value>read-write</value>
    <description></description>
  </property>

</configuration>